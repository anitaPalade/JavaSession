---------------INHERITANCE:

Inheritance in Java is a mechanism in which one object acquires all the properties and behaviors of a parent object. 
It is an important part of OOPs (Object Oriented programming system).

The idea behind inheritance in Java is that you can create new classes that are built upon existing classes.
 When you inherit from an existing class, you can reuse methods and fields of the parent class. 
 Moreover, you can add new methods and fields in your current class also.

Inheritance represents the "IS-A" relationship which is also known as a parent-child relationship.
	Parent/Super Class					Child/Sub Class
	
				banana IS-A fruit
	Fruit <------------------------- Banana
		Name <---------------------- name:banana
		Color <--------------------- color: yellow
		Taste <--------------------- taste: sweet
					     usage(): vegetable, shake, chips
					     type: tropical
					     location: kerala


Terms used in Inheritance

Class: A class is a group of objects which have common properties. It is a template or blueprint from which objects are created.

Sub Class/Child Class: Subclass is a class which inherits the other class. It is also called a derived class, extended class, or child class.

Super Class/Parent Class: Superclass is the class from where a subclass inherits the features. It is also called a base class or a parent class.

Reusability: As the name specifies, reusability is a mechanism which facilitates you to reuse the fields and methods of the existing class when you create a new class. 
				You can use the same fields and methods already defined in the previous class.
				

Multiple inheritance is not allowed in java

Consider a scenario where A, B, and C are three classes.
The C class inherits A and B classes. If A and B classes have the same method and you call it from child class object, there will be ambiguity to call the method of A or B class.

Since compile-time errors are better than runtime errors, Java renders compile-time error if you inherit 2 classes.
 So whether you have same method or different, there will be compile time error.
 
 MULTIPLE INHERITANCE CAN BE ACHIEVED BY IMPLEMENTING INTERFACES
 
 REASON--
			Every method in interface is abstract by default meaning it provides no behavior hence we can implement multiple interfaces and override the methods and provide behavior.
 
---------------- Aggregation in Java:

If a class have an entity reference, it is known as Aggregation. Aggregation represents "HAS-A" relationship.

Consider a situation, Employee object contains many informations such as id, name, emailId etc. 
It contains one more object named address, which contains its own informations such as city, state, country, zipcode etc.

		Employee
			id
			name	  emp HAS-A address
			address ----------------------->    Address
								Zipcode
								StreetName	
								Landmark
								HouseNo.
													
													
													
													
IMPORTANT NOTE: MAIN METHOD CAN BE OVERLOADED BUT NEVER OVERRIDEN reason being it is a STATIC METHOD. Static blocks are evaluated at compile time,
objects are available at runtime.
							
			Example: Aggregation and INHERITANCE				
							
						house IS-A building
			Building <-----------------------  House
			  cost:					cost: 35L
								type: flat
								Bedrooms: 4
								Windows: 6
								Kitchen: 1  House HAS-A Bathroom
								Bathroom: ------------------------> Bathroom
													bathtub: true/false
													washbasin: true/false
				